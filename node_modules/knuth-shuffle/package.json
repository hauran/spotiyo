{
  "name": "knuth-shuffle",
  "version": "1.0.0",
  "description": "The Fisher-Yates (aka Knuth) shuffle for Browser and Node.js",
  "main": "index.js",
  "scripts": {
    "test": "node example.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/coolaj86/knuth-shuffle.git"
  },
  "keywords": [
    "ronald",
    "fisher",
    "frank",
    "yates",
    "fisher-yates",
    "donald",
    "knuth",
    "shuffle",
    "random",
    "randomize",
    "unbiased",
    "algorithm"
  ],
  "author": {
    "name": "AJ ONeal",
    "email": "coolaj86@gmail.com",
    "url": "http://coolaj86.info/"
  },
  "license": "Apache2",
  "bugs": {
    "url": "https://github.com/coolaj86/knuth-shuffle/issues"
  },
  "readme": "knuth-shuffle\n=============\n\nThe Fisher-Yates (aka Knuth) shuffle for Browser and Node.js\n\nThe Fisher-Yates (Knuth) Shuffle\n===\n\nAs Microsoft learned the hard way (see article below), `function random() { return 0.5 - Math.random() }` turns out to be no-so-random at all.\n\nThe fisher-yates shuffle is an algorithm so simple that not even\n[IEEE floating point math](http://blogs.adobe.com/bparadie/2011/11/22/0-2-0-1-0-30000000000000004/)\ncan screw it up!\n\nI put this on npm as `knuth-shuffle` because `fisher-yates-shuffle`\nwas just too long of a name and shuffle was already taken.\n\nBrowser Example\n===\n\n```html\n<script src=\"./knuth-shuffle.js\"></script>\n```\n\n```javascript\n(function () {\n  'use strict';\n\n  var a = [2,11,37,42]\n    , b\n    ;\n\n  // The shuffle modifies the original array\n  // calling a.slice(0) creates a copy, which is assigned to b\n  b = window.knuthShuffle(a.slice(0));\n  console.log(b);\n}());\n```\n\nNode Example\n===\n\n```bash\nnpm install -S knuth-shuffle\n```\n\n```javascript\n(function () {\n  'use strict';\n\n  var shuffle = require('knuth-shuffle').knuthShuffle\n    , a = [2,11,37,42]\n    , b\n    ;\n\n  // The shuffle modifies the original array\n  // calling a.slice(0) creates a copy, which is assigned to b\n  b = shuffle(a.slice(0));\n  console.log(b);\n}());\n```\n\nSee Also\n===\n\n  * [Mike Bostock's Fisherâ€“Yates Shuffle Visualization](http://bost.ocks.org/mike/shuffle/)\n  * [How to randomize/shuffle a JavaScript array](http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array)\n  * [Fisher-Yates Shuffle on Wikipedia](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n  * [Doing the Microsoft Shuffle: Algorithm Fail in Browser Ballot](http://www.robweir.com/blog/2010/02/microsoft-random-browser-ballot.html)\n  * [knuth-shuffle on NPM](https://npmjs.org/package/citare-scriptum)\n",
  "readmeFilename": "README.md",
  "_id": "knuth-shuffle@1.0.0",
  "dist": {
    "shasum": "c11341f8c99d10e456a80aec3060bf330a2358e0",
    "tarball": "http://registry.npmjs.org/knuth-shuffle/-/knuth-shuffle-1.0.0.tgz"
  },
  "_from": "knuth-shuffle@",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "coolaj86",
    "email": "coolaj86@gmail.com"
  },
  "maintainers": [
    {
      "name": "coolaj86",
      "email": "coolaj86@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "c11341f8c99d10e456a80aec3060bf330a2358e0",
  "_resolved": "https://registry.npmjs.org/knuth-shuffle/-/knuth-shuffle-1.0.0.tgz"
}
